local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==5) then v38=v35;v39=nil;function v39(...) return {...},v20("#",...);end v29=6;end if (v29==4) then function v36() local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==2) then v48=v32(v45,21,31);v49=((v32(v45,32)==1) and  -1) or 1 ;v43=3;end if (v43==3) then if (v48==0) then if (v47==0) then return v49 * 0 ;else local v124=0;while true do if (v124==0) then v48=1;v46=0;break;end end end elseif (v48==(3951 -1904)) then return ((v47==0) and (v49 * (1/(0 -0)))) or (v49 * NaN) ;end return v16(v49,v48-1023 ) * (v46 + (v47/(2^52))) ;end if (v43==0) then v44=v35();v45=v35();v43=1;end if (v43==1) then v46=1;v47=(v32(v45,1,20) * (2^(91 -59))) + v44 ;v43=2;end end end v37=nil;function v37(v50) local v51=0;local v52;local v53;while true do if (1==v51) then v52=v11(v27,v30,(v30 + v50) -1 );v30=v30 + v50 ;v51=2;end if (0==v51) then v52=nil;if  not v50 then local v117=0;while true do if (v117==0) then v50=v35();if (v50==0) then return "";end break;end end end v51=1;end if (3==v51) then return v14(v53);end if (v51==2) then v53={};for v91=1, #v52 do v53[v91]=v10(v9(v11(v52,v91,v91)));end v51=3;end end end v29=5;end if (v29==6) then v40=nil;function v40() local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v54==1) then v59=v35();v60={};for v93=1,v59 do local v94=v33();local v95;if (v94==1) then v95=v33()~=0 ;elseif (v94==2) then v95=v36();elseif (v94==3) then v95=v37();end v60[v93]=v95;end v58[3]=v33();v54=2;end if (2==v54) then for v97=620 -(555 + 64) ,v35() do local v98=v33();if (v32(v98,1,1)==0) then local v120=0;local v121;local v122;local v123;while true do if (v120==0) then v121=v32(v98,2,3);v122=v32(v98,4,6);v120=1;end if (v120==2) then if (v32(v122,1,1)==1) then v123[2]=v60[v123[2]];end if (v32(v122,2,2)==(928 -(214 + 713))) then v123[3]=v60[v123[3]];end v120=3;end if (v120==1) then v123={v34(),v34(),nil,nil};if (v121==(931 -(857 + 74))) then local v136=0;while true do if (v136==0) then v123[3]=v34();v123[4]=v34();break;end end elseif (v121==1) then v123[3]=v35();elseif (v121==(570 -(367 + 201))) then v123[3]=v35() -(2^16) ;elseif (v121==3) then local v143=0;while true do if (0==v143) then v123[3]=v35() -(2^16) ;v123[4]=v34();break;end end end v120=2;end if (v120==3) then if (v32(v122,3,3)==1) then v123[4]=v60[v123[4]];end v55[v97]=v123;break;end end end end for v99=1,v35() do v56[v99-1 ]=v40();end return v58;end if (v54==0) then v55={};v56={};v57={};v58={v55,v56,nil,v57};v54=1;end end end v41=nil;v29=7;end if (v29==2) then function v33() local v61=0;local v62;while true do if (v61==0) then v62=v9(v27,v30,v30);v30=v30 + 1 ;v61=1;end if (v61==1) then return v62;end end end v34=nil;function v34() local v63=0;local v64;local v65;while true do if (v63==1) then return (v65 * 256) + v64 ;end if (v63==0) then v64,v65=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v63=1;end end end v29=3;end if (v29==3) then v35=nil;function v35() local v66=0;local v67;local v68;local v69;local v70;while true do if (v66==0) then v67,v68,v69,v70=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v66=1;end if (1==v66) then return (v70 * 16777216) + (v69 * (204899 -139363)) + (v68 * 256) + v67 ;end end end v36=nil;v29=4;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\163\115","\49\141\93\113\42\147\17\150"),function(v71) if (v9(v71,2)==79) then v31=v8(v11(v71,1,1));return "";else local v82=v10(v8(v71,16));if v31 then local v101=0;local v102;while true do if (0==v101) then v102=v13(v82,v31);v31=nil;v101=1;end if (v101==1) then return v102;end end else return v82;end end end);v29=1;end if (v29==1) then v32=nil;function v32(v72,v73,v74) if v74 then local v83=0;local v84;while true do if (v83==0) then v84=(v72/(2^(v73-1)))%(2^(((v74-1) -(v73-1)) + 1)) ;return v84-(v84%1) ;end end else local v85=0;local v86;while true do if (v85==0) then v86=2^(v73-1) ;return (((v72%(v86 + v86))>=v86) and 1) or 0 ;end end end end v33=nil;v29=2;end if (v29==7) then function v41(v75,v76,v77) local v78=0;local v79;local v80;local v81;while true do if (v78==0) then v79=v75[1 + 0 ];v80=v75[2];v78=1;end if (v78==1) then v81=v75[3];return function(...) local v103=v79;local v104=v80;local v105=v81;local v106=v39;local v107=1;local v108= -1;local v109={};local v110={...};local v111=v20("#",...) -1 ;local v112={};local v113={};for v118=0,v111 do if (v118>=v105) then v109[v118-v105 ]=v110[v118 + 1 + 0 ];else v113[v118]=v110[v118 + 1 ];end end local v114=(v111-v105) + 1 ;local v115;local v116;while true do local v119=0;while true do if (v119==0) then v115=v103[v107];v116=v115[878 -(282 + 595) ];v119=1;end if (v119==1) then if (v116<=54) then if (v116<=26) then if (v116<=12) then if (v116<=5) then if (v116<=2) then if (v116<=0) then local v146=v115[2];v113[v146](v21(v113,v146 + 1 ,v115[3]));elseif (v116==1) then local v180=v115[1639 -(1523 + 114) ];local v181,v182=v106(v113[v180](v21(v113,v180 + 1 ,v108)));v108=(v182 + v180) -1 ;local v183=0;for v355=v180,v108 do local v356=0;while true do if (v356==0) then v183=v183 + 1 ;v113[v355]=v181[v183];break;end end end else v113[v115[2]]=v113[v115[3]][v115[4]];end elseif (v116<=3) then local v147=0;local v148;local v149;while true do if (v147==0) then v148=v115[2];v149=v113[v115[3]];v147=1;end if (v147==1) then v113[v148 + 1 ]=v149;v113[v148]=v149[v115[4]];break;end end elseif (v116==(4 + 0)) then local v186=0;local v187;while true do if (v186==0) then v187=v115[2];do return v113[v187](v21(v113,v187 + (1 -0) ,v115[3]));end break;end end else v113[v115[2]]=v113[v115[3]] -v113[v115[4]] ;end elseif (v116<=8) then if (v116<=(1071 -(68 + 997))) then v113[v115[2]]=v113[v115[3]] + v113[v115[4]] ;elseif (v116>7) then v113[v115[2]]=v113[v115[1273 -(226 + 1044) ]]%v113[v115[4]] ;else local v190=v115[2];local v191,v192=v106(v113[v190](v113[v190 + 1 ]));v108=(v192 + v190) -(4 -3) ;local v193=117 -(32 + 85) ;for v362=v190,v108 do v193=v193 + 1 ;v113[v362]=v191[v193];end end elseif (v116<=10) then if (v116==9) then local v194=0;local v195;while true do if (v194==0) then v195=v115[2 + 0 ];v113[v195]=v113[v195](v113[v195 + 1 ]);break;end end else for v365=v115[2],v115[3] do v113[v365]=nil;end end elseif (v116==11) then local v196=0;local v197;local v198;local v199;while true do if (v196==1) then v199={};v198=v18({},{[v7("\208\215\6\168\41\21\247","\112\143\136\111\198\77")]=function(v445,v446) local v447=v199[v446];return v447[1][v447[2]];end,[v7("\184\150\12\226\144\160\12\227\130\177","\135\231\201\98")]=function(v448,v449,v450) local v451=v199[v449];v451[1 + 0 ][v451[2]]=v450;end});v196=2;end if (v196==0) then v197=v104[v115[3]];v198=nil;v196=1;end if (v196==2) then for v453=958 -(892 + 65) ,v115[4] do local v454=0;local v455;while true do if (v454==0) then v107=v107 + 1 ;v455=v103[v107];v454=1;end if (1==v454) then if (v455[1]==39) then v199[v453-1 ]={v113,v455[3]};else v199[v453-(2 -1) ]={v76,v455[3]};end v112[ #v112 + 1 ]=v199;break;end end end v113[v115[2]]=v41(v197,v198,v77);break;end end else do return v113[v115[2]]();end end elseif (v116<=19) then if (v116<=15) then if (v116<=13) then for v175=v115[2],v115[3] do v113[v175]=nil;end elseif (v116==14) then local v200=v115[2];local v201=v113[v200];for v367=v200 + (1 -0) ,v108 do v15(v201,v113[v367]);end else v113[v115[2]]=v113[v115[3]] * v113[v115[4]] ;end elseif (v116<=17) then if (v116==16) then local v203=0;local v204;local v205;while true do if (v203==1) then for v456=1, #v112 do local v457=0;local v458;while true do if (v457==0) then v458=v112[v456];for v521=0, #v458 do local v522=v458[v521];local v523=v522[1];local v524=v522[2];if ((v523==v113) and (v524>=v204)) then local v534=0;while true do if (v534==0) then v205[v524]=v523[v524];v522[1 -0 ]=v205;break;end end end end break;end end end break;end if (0==v203) then v204=v115[2];v205={};v203=1;end end else v113[v115[2]]();end elseif (v116==18) then if (v115[352 -(87 + 263) ]<v113[v115[4]]) then v107=v107 + (181 -(67 + 113)) ;else v107=v115[3];end else do return v113[v115[2]];end end elseif (v116<=(17 + 5)) then if (v116<=20) then v113[v115[2]]=v115[3];elseif (v116>21) then local v206=0;local v207;while true do if (v206==0) then v207=v115[2];v113[v207]=v113[v207](v21(v113,v207 + 1 ,v115[3]));break;end end else v113[v115[2]]=v77[v115[3]];end elseif (v116<=24) then if (v116==23) then v113[v115[4 -2 ]]=v115[3] + v113[v115[4]] ;else v113[v115[2]]=v113[v115[3]] + v113[v115[4]] ;end elseif (v116==25) then local v212=v115[2 + 0 ];local v213,v214=v106(v113[v212]());v108=(v214 + v212) -1 ;local v215=0;for v368=v212,v108 do v215=v215 + 1 ;v113[v368]=v213[v215];end else local v216=0;local v217;local v218;local v219;while true do if (v216==1) then v219=v115[11 -8 ];for v459=1,v219 do v218[v459]=v113[v217 + v459 ];end break;end if (0==v216) then v217=v115[2];v218=v113[v217];v216=1;end end end elseif (v116<=40) then if (v116<=33) then if (v116<=29) then if (v116<=27) then v113[v115[2]][v113[v115[3]]]=v115[956 -(802 + 150) ];elseif (v116>28) then v113[v115[2]]={};else v113[v115[2]]=v115[3] + v113[v115[4]] ;end elseif (v116<=31) then if (v116==30) then local v222=0;local v223;local v224;local v225;while true do if (v222==0) then v223=v104[v115[3]];v224=nil;v222=1;end if (1==v222) then v225={};v224=v18({},{[v7("\105\130\237\25\201\162\78","\199\54\221\132\119\173")]=function(v462,v463) local v464=0;local v465;while true do if (v464==0) then v465=v225[v463];return v465[1][v465[5 -3 ]];end end end,[v7("\51\188\47\7\34\228\206\189\9\155","\217\108\227\65\98\85\141\160")]=function(v466,v467,v468) local v469=0;local v470;while true do if (0==v469) then v470=v225[v467];v470[1 -0 ][v470[2]]=v468;break;end end end});v222=2;end if (v222==2) then for v471=1,v115[4] do local v472=0;local v473;while true do if (v472==0) then v107=v107 + 1 ;v473=v103[v107];v472=1;end if (v472==1) then if (v473[1]==39) then v225[v471-1 ]={v113,v473[3]};else v225[v471-1 ]={v76,v473[3]};end v112[ #v112 + 1 ]=v225;break;end end end v113[v115[2]]=v41(v223,v224,v77);break;end end else v107=v115[3];end elseif (v116>32) then v113[v115[2]]=v113[v115[3 + 0 ]];else v113[v115[999 -(915 + 82) ]][v115[3]]=v113[v115[4]];end elseif (v116<=36) then if (v116<=(96 -62)) then v113[v115[2]]= #v113[v115[3]];elseif (v116==35) then v113[v115[2]]=v113[v115[3]] -v113[v115[4]] ;else local v232=0;local v233;local v234;while true do if (v232==1) then for v474=v233 + 1 ,v115[3] do v15(v234,v113[v474]);end break;end if (v232==0) then v233=v115[2];v234=v113[v233];v232=1;end end end elseif (v116<=(23 + 15)) then if (v116>(48 -11)) then local v235=v115[2];local v236=v113[v235];local v237=v113[v235 + 2 ];if (v237>0) then if (v236>v113[v235 + 1 ]) then v107=v115[3];else v113[v235 + 3 ]=v236;end elseif (v236<v113[v235 + 1 ]) then v107=v115[3];else v113[v235 + 3 ]=v236;end else local v238=0;local v239;while true do if (0==v238) then v239=v115[2];v113[v239](v21(v113,v239 + (1188 -(1069 + 118)) ,v115[6 -3 ]));break;end end end elseif (v116>(84 -45)) then v113[v115[2]]=v76[v115[1 + 2 ]];else v113[v115[2]]=v113[v115[3]];end elseif (v116<=47) then if (v116<=43) then if (v116<=41) then local v156=0;local v157;local v158;while true do if (v156==1) then for v386=v157 + 1 ,v108 do v15(v158,v113[v386]);end break;end if (0==v156) then v157=v115[2];v158=v113[v157];v156=1;end end elseif (v116==42) then local v244=0;local v245;local v246;local v247;local v248;while true do if (v244==1) then v108=(v247 + v245) -1 ;v248=0;v244=2;end if (v244==2) then for v479=v245,v108 do v248=v248 + 1 ;v113[v479]=v246[v248];end break;end if (v244==0) then v245=v115[2];v246,v247=v106(v113[v245](v21(v113,v245 + 1 ,v108)));v244=1;end end else local v249=0;local v250;while true do if (v249==0) then v250=v115[2];v113[v250]=v113[v250]();break;end end end elseif (v116<=(79 -34)) then if (v116==44) then local v251=0;local v252;local v253;local v254;local v255;while true do if (1==v251) then v108=(v254 + v252) -1 ;v255=0;v251=2;end if (v251==2) then for v482=v252,v108 do v255=v255 + 1 ;v113[v482]=v253[v255];end break;end if (v251==0) then v252=v115[2];v253,v254=v106(v113[v252](v21(v113,v252 + 1 ,v115[3])));v251=1;end end else local v256=0;local v257;local v258;local v259;local v260;while true do if (v256==0) then v257=v115[2];v258,v259=v106(v113[v257](v113[v257 + 1 ]));v256=1;end if (1==v256) then v108=(v259 + v257) -1 ;v260=0;v256=2;end if (v256==2) then for v485=v257,v108 do v260=v260 + 1 ;v113[v485]=v258[v260];end break;end end end elseif (v116>46) then v77[v115[3]]=v113[v115[2]];else local v263=v115[2];v113[v263](v113[v263 + 1 ]);end elseif (v116<=50) then if (v116<=48) then local v159=0;local v160;while true do if (0==v159) then v160=v115[2];do return v21(v113,v160,v108);end break;end end elseif (v116>49) then local v264=v115[2];local v265,v266=v106(v113[v264](v21(v113,v264 + 1 ,v115[3])));v108=(v266 + v264) -1 ;local v267=0;for v374=v264,v108 do local v375=0;while true do if (v375==0) then v267=v267 + 1 ;v113[v374]=v265[v267];break;end end end else local v268=0;local v269;while true do if (v268==0) then v269=v115[2];v113[v269]=v113[v269]();break;end end end elseif (v116<=52) then if (v116>51) then local v270=0;local v271;local v272;local v273;local v274;while true do if (v270==2) then for v490=v271,v108 do local v491=0;while true do if (v491==0) then v274=v274 + 1 ;v113[v490]=v272[v274];break;end end end break;end if (v270==1) then v108=(v273 + v271) -(1 + 0) ;v274=0;v270=2;end if (v270==0) then v271=v115[2];v272,v273=v106(v113[v271]());v270=1;end end else v113[v115[2]]=v113[v115[3]]%v113[v115[4]] ;end elseif (v116==53) then if (v113[v115[2]]==v115[4]) then v107=v107 + 1 ;else v107=v115[3];end else local v276=0;local v277;while true do if (v276==0) then v277=v115[2];v113[v277]=v113[v277](v21(v113,v277 + 1 ,v115[3]));break;end end end elseif (v116<=(873 -(368 + 423))) then if (v116<=68) then if (v116<=61) then if (v116<=57) then if (v116<=(172 -117)) then local v161=0;local v162;while true do if (v161==0) then v162=v115[2];v113[v162]=v113[v162](v113[v162 + 1 ]);break;end end elseif (v116==56) then v113[v115[2]][v113[v115[3]]]=v113[v115[4]];else local v280=v115[2];do return v113[v280](v21(v113,v280 + (19 -(10 + 8)) ,v115[3]));end end elseif (v116<=59) then if (v116==58) then local v281=0;local v282;while true do if (v281==0) then v282=v115[2];v113[v282](v21(v113,v282 + 1 ,v108));break;end end else v113[v115[2]]();end elseif (v116>60) then if (v115[2]==v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[3];end else do return;end end elseif (v116<=64) then if (v116<=(238 -176)) then v113[v115[2]]=v113[v115[3]]%v115[4] ;elseif (v116==63) then local v283=v115[2];local v284=v113[v115[3]];v113[v283 + 1 ]=v284;v113[v283]=v284[v115[4]];else v113[v115[2]]=v115[445 -(416 + 26) ]~=0 ;end elseif (v116<=66) then if (v116>65) then if v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v113[v115[6 -4 ]]==v115[4]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116>67) then local v289=0;local v290;while true do if (v289==0) then v290=v115[2];v113[v290]=v113[v290](v21(v113,v290 + 1 ,v108));break;end end elseif  not v113[v115[1 + 1 ]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116<=75) then if (v116<=(125 -54)) then if (v116<=69) then v113[v115[2]]=v41(v104[v115[3]],nil,v77);elseif (v116==70) then v113[v115[2]]= #v113[v115[3]];else v113[v115[440 -(145 + 293) ]][v113[v115[433 -(44 + 386) ]]]=v113[v115[4]];end elseif (v116<=73) then if (v116>72) then if (v115[2]==v113[v115[1490 -(998 + 488) ]]) then v107=v107 + 1 ;else v107=v115[3];end else local v294=v115[2];local v295=v115[4];local v296=v294 + 2 ;local v297={v113[v294](v113[v294 + 1 ],v113[v296])};for v378=1,v295 do v113[v296 + v378 ]=v297[v378];end local v298=v297[1];if v298 then local v393=0;while true do if (v393==0) then v113[v296]=v298;v107=v115[3];break;end end else v107=v107 + 1 ;end end elseif (v116>74) then local v299=0;local v300;local v301;while true do if (v299==1) then for v492=1 + 0 , #v112 do local v493=0;local v494;while true do if (v493==0) then v494=v112[v492];for v525=0, #v494 do local v526=0;local v527;local v528;local v529;while true do if (0==v526) then v527=v494[v525];v528=v527[1];v526=1;end if (v526==1) then v529=v527[2];if ((v528==v113) and (v529>=v300)) then local v547=0;while true do if (v547==0) then v301[v529]=v528[v529];v527[1]=v301;break;end end end break;end end end break;end end end break;end if (v299==0) then v300=v115[1 + 1 ];v301={};v299=1;end end else v113[v115[2]]=v113[v115[3]]/v113[v115[776 -(201 + 571) ]] ;end elseif (v116<=78) then if (v116<=76) then local v165=v115[2];local v166=v115[1142 -(116 + 1022) ];local v167=v165 + 2 ;local v168={v113[v165](v113[v165 + 1 ],v113[v167])};for v177=1,v166 do v113[v167 + v177 ]=v168[v177];end local v169=v168[1];if v169 then local v303=0;while true do if (0==v303) then v113[v167]=v169;v107=v115[3];break;end end else v107=v107 + 1 ;end elseif (v116>77) then do return;end else v113[v115[2]]=v77[v115[3]];end elseif (v116<=80) then if (v116>79) then local v306=0;local v307;local v308;local v309;while true do if (v306==1) then v309=0;for v495=v307,v115[4] do v309=v309 + 1 ;v113[v495]=v308[v309];end break;end if (v306==0) then v307=v115[2];v308={v113[v307](v21(v113,v307 + 1 ,v108))};v306=1;end end else v113[v115[2]]=v113[v115[2 + 1 ]]/v113[v115[4]] ;end elseif (v116==81) then local v311=0;local v312;while true do if (v311==0) then v312=v115[7 -5 ];v113[v312](v21(v113,v312 + 1 ,v108));break;end end else v107=v115[3];end elseif (v116<=96) then if (v116<=89) then if (v116<=85) then if (v116<=83) then v113[v115[2]]=v113[v115[3]] + v115[4] ;elseif (v116>84) then v113[v115[2]][v115[3]]=v115[4];else v113[v115[2]]=v113[v115[3]] * v113[v115[4]] ;end elseif (v116<=87) then if (v116==86) then v113[v115[2]]=v115[3]~=0 ;else do return v113[v115[2]];end end elseif (v116==88) then if (v115[2]<v113[v115[14 -10 ]]) then v107=v107 + 1 ;else v107=v115[3];end elseif  not v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116<=92) then if (v116<=90) then v113[v115[2]][v115[3]]=v115[4];elseif (v116==91) then if v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end else v113[v115[2]]=v41(v104[v115[862 -(814 + 45) ]],nil,v77);end elseif (v116<=94) then if (v116>93) then local v319=0;local v320;local v321;local v322;while true do if (v319==1) then v322=v113[v320] + v321 ;v113[v320]=v322;v319=2;end if (2==v319) then if (v321>0) then if (v322<=v113[v320 + 1 ]) then local v516=0;while true do if (v516==0) then v107=v115[7 -4 ];v113[v320 + 3 ]=v322;break;end end end elseif (v322>=v113[v320 + 1 ]) then v107=v115[3];v113[v320 + 3 ]=v322;end break;end if (0==v319) then v320=v115[2];v321=v113[v320 + 2 ];v319=1;end end else local v323=0;local v324;while true do if (v323==0) then v324=v115[1 + 1 ];do return v21(v113,v324,v324 + v115[3] );end break;end end end elseif (v116>95) then v113[v115[2]]={};else local v326=0;local v327;while true do if (0==v326) then v327=v115[2];v113[v327](v113[v327 + 1 + 0 ]);break;end end end elseif (v116<=103) then if (v116<=99) then if (v116<=(982 -(261 + 624))) then local v173=0;local v174;while true do if (v173==0) then v174=v115[2];v113[v174]=v113[v174](v21(v113,v174 + 1 ,v108));break;end end elseif (v116>(173 -75)) then local v328=v115[2];local v329={v113[v328](v21(v113,v328 + 1 ,v108))};local v330=1423 -(630 + 793) ;for v383=v328,v115[4] do local v384=0;while true do if (v384==0) then v330=v330 + 1 ;v113[v383]=v329[v330];break;end end end else v113[v115[6 -4 ]][v113[v115[3]]]=v115[4];end elseif (v116<=101) then if (v116==(473 -373)) then v113[v115[2]][v115[3]]=v113[v115[2 + 2 ]];else v77[v115[3]]=v113[v115[2]];end elseif (v116>102) then local v337=0;local v338;local v339;local v340;while true do if (v337==0) then v338=v115[2];v339=v113[v338];v337=1;end if (1==v337) then v340=v115[3];for v500=1,v340 do v339[v500]=v113[v338 + v500 ];end break;end end else v113[v115[2]]=v113[v115[3]] + v115[4] ;end elseif (v116<=106) then if (v116<=104) then do return v113[v115[2]]();end elseif (v116==105) then v113[v115[2]]=v113[v115[3]]%v115[4] ;else local v343=0;local v344;local v345;local v346;while true do if (2==v343) then if (v345>0) then if (v346<=v113[v344 + (3 -2) ]) then local v519=0;while true do if (v519==0) then v107=v115[3];v113[v344 + (1750 -(760 + 987)) ]=v346;break;end end end elseif (v346>=v113[v344 + 1 ]) then local v520=0;while true do if (v520==0) then v107=v115[3];v113[v344 + 3 ]=v346;break;end end end break;end if (v343==1) then v346=v113[v344] + v345 ;v113[v344]=v346;v343=2;end if (v343==0) then v344=v115[2];v345=v113[v344 + 2 ];v343=1;end end end elseif (v116<=108) then if (v116==107) then v113[v115[1915 -(1789 + 124) ]]=v76[v115[3]];else local v349=0;local v350;while true do if (v349==0) then v350=v115[2];do return v21(v113,v350,v108);end break;end end end elseif (v116==109) then v113[v115[2]]=v115[3];else v113[v115[2]]=v113[v115[3]][v115[4]];end v107=v107 + (767 -(745 + 21)) ;break;end end end end;end end end return v41(v40(),{},v28)(...);end end end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.4) ~  Much Love, Ferib 

]]--
